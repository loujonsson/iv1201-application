# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - development
      - master
  pull_request:
    branches: [ development ]
  schedule:
    - cron: "0 2 * * 1-5"

env:
  POSTGRES_TCP_ADDR: postgres
  POSTGRES_TCP_PORT: 5432
  SPRING_DATASOURCE_PASSWORD: postgres

jobs:
  build:

    runs-on: ubuntu-latest
    # container: openjdk:14-jdk-slim
    services:
      postgres:
        image: postgres
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQL10Dialect
          SPRING_JPA_GENERATE-DDL: true
          SPRING_JPA_HIBERNATE_DDL-AUTO: create
          SPRING_JPA_DATABASEPLATFORM: ${{ secrets.SPRING_JPA_DATABASEPLATFORM }}
          POSTGRES_PASSWORD: postgres

        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set up Maven
        run: sudo apt install maven
      - name: Build with Maven
        env:
          spring.datasource.url: ${{ secrets.SPRING_DATASOURCE_URL }}
          spring.datasource.username: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          spring.datasource.password: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          spring.datasource.driver-class-name: org,postgresql.Driver
          spring.jpa.properties.hibernate.hbm2ddl.auto: update
          spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL10Dialect
          spring.jpa.hibernate.ddl-auto: update
          spring.datasource.driverClassName: org.postgresql.Driver
        run: mvn -B package --file pom.xml






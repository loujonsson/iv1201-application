# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - development
      - master
  pull_request:
    branches: [ development ]
  schedule:
    - cron: "0 2 * * 1-5"



jobs:
  mvn-verify:
    name: run-mvn-install
    runs-on: ubuntu-latest
    container: openjdk:14-jdk-slim

    env:
      POSTGRES_TCP_ADDR: postgres
      POSTGRES_TCP_PORT: 5432
      SPRING_DATASOURCE_URL: ${{ secrets.DATABASE_URL }}
      SPRING_DATABASE_URL: ${{secrets.DATABASE_URL}}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      SPRING_JPA_DATABASEPLATFORM: ${{secrets.SPRING_JPA_DATABASEPLATFORM}}

    services:
      postgres:
        image: postgres
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.DATABASE_URL }}
          SPRING_DATABASE_URL: ${{secrets.DATABASE_URL}}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_JPA_DATABASE_PLATFORM: ${{secrets.SPRING_JPA_DATABASEPLATFORM}}
        url: ${{secrets.DATABASE_URL}}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - run: ./mvnw verify

    build:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v2
        - name: Set up JDK 1.8
          uses: actions/setup-java@v1
          with:
            java-version: 1.8
        - name: Build with Maven
          run: mvn -B package --file pom.xml





